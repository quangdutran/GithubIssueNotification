name: Check Public Repo Issues and Notify Slack

on:
  schedule:
    - cron: "*/2 * * * *" # Daily at 09:00 UTC
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Check issues with specific label in last 24h
        id: check_issues
        run: |
          OWNER="opensearch-project"
          REPO="OpenSearch"
          LABEL="bug,enhancement"

          RESPONSE=$(curl -s "https://api.github.com/repos/$OWNER/$REPO/issues?labels=$LABEL&state=open&sort=created&direction=desc&per_page=1")

          echo "DEBUG: LINK: https://api.github.com/repos/$OWNER/$REPO/issues?labels=$LABEL"
          echo "DEBUG: RESPONSE=$RESPONSE"

          TITLE=$(echo "$RESPONSE" | jq -r '.[0].title // empty')
          URL=$(echo "$RESPONSE" | jq -r '.[0].html_url // empty')
          CREATED_AT=$(echo "$RESPONSE" | jq -r '.[0].created_at // empty')

          echo "DEBUG: TITLE=$TITLE"
          echo "DEBUG: URL=$URL"
          echo "DEBUG: CREATED_AT=$CREATED_AT"

          if [ -n "$TITLE" ] && [ -n "$CREATED_AT" ]; then
            CREATED_TS=$(date -d "$CREATED_AT" +%s)
            NOW_TS=$(date +%s)
            DIFF=$(( NOW_TS - CREATED_TS ))

            if [ $DIFF -le 86400 ]; then
              echo "title=$TITLE" >> $GITHUB_OUTPUT
              echo "url=$URL" >> $GITHUB_OUTPUT
            else
              echo "title=" >> $GITHUB_OUTPUT
              echo "url=" >> $GITHUB_OUTPUT
            fi
          else
            echo "title=" >> $GITHUB_OUTPUT
            echo "url=" >> $GITHUB_OUTPUT
          fi
      
      - name: Debug outputs
        run: |
          echo "Title from step: ${{ steps.check_issues.outputs.title }}"
          echo "URL from step:   ${{ steps.check_issues.outputs.url }}"

      - name: Send Slack notification
        if: steps.check_issues.outputs.title != ''
        run: |
          PAYLOAD=$(jq -n \
            --arg text ":warning: New GitHub Issue in *${{ steps.check_issues.outputs.url }}* \n*${{ steps.check_issues.outputs.title }}*" \
            '{text: $text}')

          curl -X POST -H 'Content-type: application/json' \
            --data "$PAYLOAD" \
            "${{ secrets.SLACK_WEBHOOK_URL }}"
